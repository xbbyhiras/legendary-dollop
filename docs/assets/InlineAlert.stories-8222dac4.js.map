{"version":3,"file":"InlineAlert.stories-8222dac4.js","sources":["../../node_modules/@ant-design/icons-svg/es/asn/InfoCircleOutlined.js","../../node_modules/@ant-design/icons/es/icons/InfoCircleOutlined.js","../../src/components/Alerts/AlertSpan.ts","../../src/components/Alerts/InlineAlert.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar InfoCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 336a48 48 0 1096 0 48 48 0 10-96 0zm72 112h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V456c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"info-circle\", \"theme\": \"outlined\" };\nexport default InfoCircleOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport InfoCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/InfoCircleOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar InfoCircleOutlined = function InfoCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: InfoCircleOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  InfoCircleOutlined.displayName = 'InfoCircleOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(InfoCircleOutlined);","import styled, { css } from 'styled-components'\n\nexport const AlertSpan = styled.span<{ $type?: 'warning' | 'error' }>(\n  ({ theme: { colors }, $type }) => css`\n    -webkit-user-select: none;\n    user-select: none;\n    ${$type === 'error' && `color: ${colors.byhiras.red}`};\n  `\n)\n","import { InfoCircleOutlined } from '../Icon/icons'\nimport { AlertSpan } from './AlertSpan'\n\ntype InlineAlertProps = {\n  message: string\n  type?: 'warning' | 'error'\n}\n\nexport const InlineAlert = ({ message, type = 'warning' }: InlineAlertProps) => (\n  <AlertSpan $type={type}>\n    <InfoCircleOutlined /> {message}\n  </AlertSpan>\n)\n"],"names":["InfoCircleOutlined","InfoCircleOutlinedSvg","props","ref","React.createElement","AntdIcon","_extends","InfoCircleOutlined$1","React.forwardRef","AlertSpan","styled","colors","$type","css","InlineAlert","message","type","jsxs","jsx"],"mappings":"yRACA,IAAIA,EAAqB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,OAAS,EAAE,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,+KAA+K,CAAI,EAAE,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,kIAAoI,CAAA,CAAE,CAAC,EAAI,KAAQ,cAAe,MAAS,YACjiB,MAAAC,EAAeD,ECKf,IAAIA,EAAqB,SAA4BE,EAAOC,EAAK,CAC/D,OAAoBC,EAAmB,cAACC,EAAUC,EAAS,CAAA,EAAIJ,EAAO,CACpE,IAAKC,EACL,KAAMF,CACP,CAAA,CAAC,CACJ,EAIA,MAAAM,EAA4BC,EAAAA,WAAiBR,CAAkB,ECdlDS,EAAYC,EAAO,KAC9B,CAAC,CAAE,MAAO,CAAE,OAAAC,CAAO,EAAG,MAAAC,KAAYC;AAAAA;AAAAA;AAAAA,MAG9BD,IAAU,SAAW,UAAUD,EAAO,QAAQ,GAAG,EAAE;AAAA,GAEzD,ECAOG,EAAA,CAAA,CAAA,QAAAC,EAAA,KAAAC,EAAA,SAAA,IAAAC,EAAA,KAAAR,EAAA,CAAA,MAAAO,EAAA,SAAA,CAEHE,EAAA,IAAAlB,EAAA,EAAA,EAAoB,IAAEe,CAAE,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0,1]}